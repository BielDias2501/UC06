CREATE TABLE IF NOT EXISTS CLIENTES(
   ID SERIAL primary key,
   NOME VARCHAR(100) NOT NULL,
   EMAIL VARCHAR(100) NOT NULL UNIQUE,
   TELEFONE VARCHAR(20) NOT NULL UNIQUE,
   DATA_CADASTRO DATE DEFAULT (CURRENT_DATE) NOT NULL
);

CREATE TABLE IF NOT EXISTS SERVICOS(
  ID SERIAL primary key,
  NOME VARCHAR(100) NOT NULL,
  DESCRICAO TEXT NOT NULL,
  PRECO DECIMAL(10,2) NOT NULL,
  TIPO_SERVICO VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS TECNICOS(
  ID SERIAL primary key,
  NOME VARCHAR(100) NOT NULL,
  ESPECIALIDADE VARCHAR(50) NOT NULL,
  DATA_CONTRATACAO DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS CHAMADOS(
  ID SERIAL primary key,
  CLIENTE_ID INT,
  TECNICO_ID INT,
  SERVICO_ID INT,
  DATA_CHAMADO DATE DEFAULT (CURRENT_DATE) NOT NULL,
  STATUS VARCHAR(20) NOT NULL,
  DESCRICAO TEXT NOT NULL,
  CONSTRAINT FK_CLIENTE FOREIGN KEY(CLIENTE_ID) REFERENCES CLIENTES(ID) ON DELETE CASCADE,
  CONSTRAINT FK_SERVICO FOREIGN KEY(SERVICO_ID) REFERENCES SERVICOS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_TECNICOS FOREIGN KEY(TECNICO_ID) REFERENCES TECNICOS(ID) ON DELETE CASCADE
 );

 CREATE TABLE IF NOT EXISTS PAGAMENTOS(
  ID SERIAL primary key,
  CLIENTE_ID INT,
  CHAMADO_ID INT,
  VALOR_PAGO DECIMAL(10,2) NOT NULL,
  DATA_PAGAMENTO DATE NOT NULL,
  FORMA_PAGAMENTO VARCHAR(50) NOT NULL,
  CONSTRAINT FK_CLIENTE_PAGAMENTO FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID) ON DELETE CASCADE,
  CONSTRAINT FK_CHAMADO_PAGAMENTO FOREIGN KEY (CHAMADO_ID) REFERENCES CHAMADOS(ID) ON DELETE CASCADE 
 );

--QUESTÃO 2
ALTER TABLE SERVICOS ADD CONSTRAINT PRECOMAIORQUEZERO CHECK (PRECO > 0);

ALTER TABLE CHAMADOS ADD CONSTRAINT VERIFICARSTATUS CHECK (status = 'Pendente' or status = 'Em andamento' or status = 'Finalizado');

ALTER TABLE PAGAMENTOS ADD CONSTRAINT VALORPAGOMAIORQUEZERO CHECK (VALOR_PAGO > 0);

ALTER TABLE SERVICOS ADD CONSTRAINT VERIFICARTIPOSERVICO CHECK (TIPO_SERVICO = 'Consultoria' or TIPO_SERVICO = 'Suporte' or TIPO_SERVICO = 'Manutenção');

--QUESTÃO 3
Insert into CLIENTES(nome, email, telefone, data_cadastro)
Values ('João Silva','joao@email.com','(11) 98765-4321','2023-01-15');
Insert into CLIENTES(nome, email, telefone, data_cadastro)
Values ('Maria Oliveira','maria@email.com','(21) 99654-3210','2023-02-20');
Insert into CLIENTES(nome, email, telefone, data_cadastro)
Values ('Pedro Souza','pedro@email.com','(31) 99765-1234','2023-03-10');
Insert into CLIENTES(nome, email, telefone, data_cadastro)
Values ('Ana Costa','ana@email.com','(41) 98888-9999','2023-04-25');
Insert into CLIENTES(nome, email, telefone, data_cadastro)
Values('Lucas Almeida','lucas@email.com','(61) 99123-4567','2023-05-30');

Insert into SERVICOS(nome, descricao, preco , tipo_servico)
Values ('Consultoria em TI','Consultoria especializada em infraestrutura de TI',500.00,'Consultoria');
Insert into SERVICOS(nome, descricao, preco , tipo_servico)
Values('Manutenção de Equipamentos','Manutenção preventiva e corretiva de equipamentos',300.00,'Manutenção');
Insert into SERVICOS(nome, descricao, preco , tipo_servico)
Values('Suporte Técnico','Suporte remoto e presencial para empresas',200.00,'Suporte');

Insert into TECNICOS(nome, especialidade, data_contratacao)
Values ('Carlos Oliveira','Consultoria TI','2022-10-10');
Insert into TECNICOS(nome, especialidade, data_contratacao)
Values ('Fernanda Souza','Manutenção','2021-06-15');
Insert into TECNICOS(nome, especialidade, data_contratacao)
Values ('Roberto Costa','Suporte Técnico','2020-08-20');

Insert into CHAMADOS(cliente_id, tecnico_id, servico_id, data_chamado, status, descricao)
Values(1,1,1,'2023-06-01','Pendente','Fiação da casa queimada');
Insert into CHAMADOS(cliente_id, tecnico_id, servico_id, data_chamado, status, descricao)
Values(2,2,2,'2023-07-10','Em andamento','Vazamento na tubulação');
Insert into CHAMADOS(cliente_id, tecnico_id, servico_id, data_chamado, status, descricao)
Values(3,3,3,'2023-08-05','Finalizado','Configuração de software empresarial.');
Insert into CHAMADOS(cliente_id, tecnico_id, servico_id, data_chamado, status, descricao)
Values(4,1,2,'2023-09-20','Pendente','Manutenção de computador');
Insert into CHAMADOS(cliente_id, tecnico_id, servico_id, data_chamado, status, descricao)
Values(5,2,1,'2023-10-15','Finalizado','Suporte para software');

Insert into PAGAMENTOS(cliente_id, CHAMADO_ID, valor_pago, data_pagamento, forma_pagamento)
Values(1,3,350.00,'2023-06-15','PIX');
Insert into PAGAMENTOS(cliente_id, chamado_id, valor_pago, data_pagamento, forma_pagamento)
Values(2,4,450.00,'2023-07-15','PIX');
Insert into PAGAMENTOS(cliente_id, chamado_id, valor_pago, data_pagamento, forma_pagamento)
Values(3,5,600.00,'2023-08-10','PIX');
Insert into PAGAMENTOS(cliente_id, chamado_id, valor_pago, data_pagamento, forma_pagamento)
Values(4,6,300.00,'2023-09-25','PIX');

SELECT * FROM CLIENTES

SELECT * FROM SERVICOS

SELECT * FROM TECNICOS

SELECT * FROM CHAMADOS

SELECT * FROM PAGAMENTOS

--QUESTÃO 4 Liste o nome e e-mail de todos os clientes cadastrados
SELECT nome,email FROM CLIENTES;

--QUESTÃO 5 Recupere os nomes dos serviços disponíveis e seus respectivos preços.
SELECT tipo_servico,preco FROM SERVICOS

--QUESTÃO 6 Exiba os nomes e especialidades de todos os técnicos.
SELECT nome,especialidade FROM TECNICOS

--QUESTÃO 7 Mostre a descrição e o status de todos os chamados registrados
SELECT descricao,status FROM CHAMADOS

--QUESTÃO 8 Liste os valores pagos e as datas de pagamento de todos os registros na tabela de pagamentos.
SELECT valor_pago,data_pagamento FROM PAGAMENTOS

--QUESTÃO 9 Liste os nomes dos clientes e as descrições de seus chamados que estão com o status "Em Andamento".
SELECT clientes.nome, chamados.descricao
FROM CLIENTES
JOIN CHAMADOS ON CLIENTES.id = CHAMADOS.cliente_id
WHERE CHAMADOS.status = 'Em andamento';

--QUESTÃO 10 Recupere os nomes dos técnicos que realizaram serviços com o tipo "Manutenção"
SELECT nome,especialidade FROM TECNICOS WHERE especialidade = 'Manutenção';

--QUESTÃO 11 Mostre os nomes dos clientes e o valor total pago por cada um deles.
SELECT CLIENTES.NOME, PAGAMENTOS.valor_pago
FROM CLIENTES
JOIN PAGAMENTOS ON CLIENTES.id = pagamentos.cliente_id;

--QUESTÃO 12 Liste os clientes e os serviços que eles solicitaram, incluindo a descrição do serviço.
SELECT CLIENTES.NOME, SERVICOS.tipo_servico, SERVICOS.descricao, SERVICOS.nome, SERVICOS.preco
FROM CLIENTES
JOIN SERVICOS ON CLIENTES.id = SERVICOS.id

--QUESTÃO 13 Recupere os nomes dos técnicos que realizaram chamados para serviços com o preço superior a 400, e exiba também o nome do serviço.
SELECT TECNICOS.nome, SERVICOS.preco, SERVICOS.nome
FROM TECNICOS
JOIN SERVICOS ON TECNICOS.id = SERVICOS.id
WHERE PRECO > 400.00;

--QUESTÃO 14 Atualize o preço de todos os serviços do tipo "Manutenção" para 350, se o preço atual for inferior a 350.
UPDATE SERVICOS
SET preco = 350
WHERE tipo_servico = 'Manutenção' AND preco < 350;

SELECT * FROM SERVICOS;


--QUESTÃO 15 Exclua todos os técnicos que não têm chamados registrados.
DELETE FROM TECNICOS
WHERE id NOT IN (SELECT DISTINCT tecnicos_id FROM chamados);

SELECT * FROM TECNICOS;
SELECT * FROM CHAMADOS;

